'''Напишите программу определяющую результат логического вырожения, которое истинно тогда и только тогда, когда число x:

трехзначное и положительное, с 0 в конце;
нечетное, делится на 3 или на 5;
принадлежит отрезку числовой прямой [2, 6];
трехзначное и все его цифры одинаковые.
(Реализовать эту программу с помощью логических вырожений, без условного оператора.)'''
def l1(x):
    l=str(x)
    log=len(l)==3 and x%10==0
    return log

def l2(x):
    log= (x%2==0 or x%3==0 or x%5==0)
    return log

def l3(x):
    log= (2<=x<=6 )
    return log
def l4(x):
    l=str(x)
    log= len(l)==3 and (l[0]==l[1]  and l[1]==l[2])
    return log
x=int(input("введите число"))
print(l1(x),l2(x),l3(x),l4(x))
'''Напишите программу определяющую результат логического вырожения, в котором используются числа 3 и 5, 
переменная x и логические операции, при этом:

выражение, истинное при любом x;
выражение, ложное при любом x.
(Реализовать эту программу с помощью логических вырожений, без условного оператора.)'''
def logica1(x):
    tr=(3//5) <1
    return tr
def logica2(x):
    tr=(3*5**35)<1
    return tr
x=int(input())
print(logica1(x),logica2(x))
'''Напишите программу определяющую результат логического вырожения, которое истинно тогда и
 только тогда, когда координаты (x,y) принадлежат заштрихаванной области.

(Реализовать эту программу с помощью логических вырожений, без условного оператора.)'''
def a(x,y):
    log=(-384875759<x<=-4 and y<3)or (-4<=x<=0 and 0<=y<3)or (0<x<4 and -4<y<0)or  (x==4 and y<=-4) or(x>4 and y>=3)
    return log
def b(x,y):
    log= 4*x*y==36-3.14*(9)
    return log
def c(x,y):
    log=x*y==(100-3.14*(25))*(1/4)
    return log
x,y=map(int, input().split())
print(a(x,y),b(x,y), c(x,y))
'''В программировании можно из одной функции вызывать другую. Для иллюстрации этой возможности
 напишите программу по следующему описанию.

Основная ветка программы, не считая заголовков функций, состоит из одной строки кода.
 Это вызов функции test(). В ней запрашивается на ввод целое число. Если оно положительное, то вызывается
  функция positive(), тело которой содержит команду вывода на экран слова "Положительное".
   Если число отрицательное, то вызывается функция negative(),
 ее тело содержит выражение вывода на экран слова "Отрицательное".'''
def test():
    x=int(input(('введите число')))
    if x>0:
        positive(x)
    else :
        negative(x)

def positive(a):
    print('%i Положительно' %(a))

def negative(a):
    print('%i отрицательное' %(a))
test()
'''Напишите программу, в которой определены следующие четыре функции:

Функция getInput() не имеет параметров, запрашивает ввод с клавиатуры и возвращает в
основную программу полученную строку.

Функция testInput() имеет один параметр. В теле она проверяет, можно ли переданное ей
значение преобразовать к целому числу. Если можно, возвращает логическое True. Если нельзя – False.

Функция strToInt() имеет один параметр. В теле преобразовывает переданное значение к
целочисленному типу. Возвращает полученное число.

Функция printInt() имеет один параметр. Она выводит переданное значение на экран и ничего не возвращает.

В основной ветке программы вызовите первую функцию. То, что она вернула, передайте во вторую функцию.
Если вторая функция вернула True, то те же данные (из первой функции)
передайте в третью функцию, а возвращенное третьей функцией значение – в четвертую.'''

def getInput():
    x =(input(('введите что-то')))
    return str(x)
def testInput(a):
    try :
        y=int(a)
        return True
    except ValueError:
        return False

def strToInt(b):
    it=int(b)
    return b
def printInt(h):
    print(h)

lam=getInput()
delt=testInput(lam)
if delt==True:
    printInt(strToInt(lam))
'''Напишите программу, которая проверяет пользователя на знание таблицы умножения.
 Пользователь сам вводит два целых однозначных числа.
  Программа задаёт вопрос: результат умножения первого числа на второе.
  Пользователь должен ввести ответ и увидеть на экране правильно он ответил или нет.
   Если нет – показать еще и правильный результат. Повторять процедуру пока пользователь не даст 5 правильных
   ответов. После трёх правильных ответов подряд программа должна выводить поощрительное, ободряющее сообщение
   (на ваш вкус),
после трёх неправильных ответов подряд – «грязно выругаться» (на ваш вкус).'''
def allure(x,y,ans):
    an=ans==x*y
    if an==False:
        print('erroneously, the correct answer is %s'%(x*y))
    return an




right=[]
while right.count(True)!=5:
    x, y = map(int, input('Введите числа').split())
    ans=int(input('Введите результат умножения'))
    incite=allure(x,y,ans)
    right.append(incite)
    if len(right)>=3:
        for i in range(1, len(right) - 1):
            if incite==True and (right[i - 1] == right[i] == right[i + 1] == True):
                print('You r doing good lad')
            if incite==False and (right[i - 1] == right[i] == right[i + 1] == False):
                print('You r doing bad lad')
'''Напишите функцию, которая удаляет из введённой пользователем строки все повторяющиеся символы и пробелы.
 После чего выводит полученный результат на экран.
Например, если было введено "abc cde def", то должно быть выведено "abcdef".'''
def strok(s):
    s_new=''
    for i in s:
        if i not in s_new and i != ' ':
            s_new += i


    return s_new

x=input('Введите число')
print(strok(x))